define(["exports","./c_init_data_runtime","./c_init_data_edison","./c_react_query_helpers_helpers","./c_core_uri","react","./c_api_v2_client_base","./c_core_attribution_header","./c_csrf","metaserver/static/js/modules/constants/viewer"],(function(e,t,n,r,s,i,a,o,m,l){"use strict";class d extends t.Message{constructor(e){super(),this.feature="",t.proto3.util.initPartial(e,this)}static fromBinary(e,t){return(new d).fromBinary(e,t)}static fromJson(e,t){return(new d).fromJson(e,t)}static fromJsonString(e,t){return(new d).fromJsonString(e,t)}static equals(e,n){return t.proto3.util.equals(d,e,n)}}d.runtime=t.proto3,d.typeName="data_modules.Feature",d.fields=t.proto3.util.newFieldList((()=>[{no:1,name:"feature",kind:"scalar",T:9}]));class u extends t.Message{constructor(e){super(),this.features=[],t.proto3.util.initPartial(e,this)}static fromBinary(e,t){return(new u).fromBinary(e,t)}static fromJson(e,t){return(new u).fromJson(e,t)}static fromJsonString(e,t){return(new u).fromJsonString(e,t)}static equals(e,n){return t.proto3.util.equals(u,e,n)}}u.runtime=t.proto3,u.typeName="data_modules.StreamAssignmentsRequest",u.fields=t.proto3.util.newFieldList((()=>[{no:1,name:"features",kind:"message",T:d,repeated:!0}]));class g extends t.Message{constructor(e){super(),this.metadata={},t.proto3.util.initPartial(e,this)}static fromBinary(e,t){return(new g).fromBinary(e,t)}static fromJson(e,t){return(new g).fromJson(e,t)}static fromJsonString(e,t){return(new g).fromJsonString(e,t)}static equals(e,n){return t.proto3.util.equals(g,e,n)}}g.runtime=t.proto3,g.typeName="data_modules.Metadata",g.fields=t.proto3.util.newFieldList((()=>[{no:1,name:"metadata",kind:"map",K:9,V:{kind:"scalar",T:9}}]));class c extends t.Message{constructor(e){super(),this.feature="",this.variant="",this.errors=[],t.proto3.util.initPartial(e,this)}static fromBinary(e,t){return(new c).fromBinary(e,t)}static fromJson(e,t){return(new c).fromJson(e,t)}static fromJsonString(e,t){return(new c).fromJsonString(e,t)}static equals(e,n){return t.proto3.util.equals(c,e,n)}}c.runtime=t.proto3,c.typeName="data_modules.Assignment",c.fields=t.proto3.util.newFieldList((()=>[{no:1,name:"feature",kind:"scalar",T:9},{no:2,name:"variant",kind:"scalar",T:9},{no:3,name:"metadata",kind:"message",T:g},{no:4,name:"errors",kind:"message",T:f,repeated:!0}]));let f=class e extends t.Message{constructor(e){super(),this.code=0,this.error="",t.proto3.util.initPartial(e,this)}static fromBinary(t,n){return(new e).fromBinary(t,n)}static fromJson(t,n){return(new e).fromJson(t,n)}static fromJsonString(t,n){return(new e).fromJsonString(t,n)}static equals(n,r){return t.proto3.util.equals(e,n,r)}};f.runtime=t.proto3,f.typeName="data_modules.Error",f.fields=t.proto3.util.newFieldList((()=>[{no:1,name:"code",kind:"scalar",T:5},{no:2,name:"error",kind:"scalar",T:9}]));const y={typeName:"data_modules.StormcrowService",methods:{streamAssignments:{name:"StreamAssignments",I:u,O:c,kind:n.MethodKind.ServerStreaming}}};class p{static isDoneStreaming(){return p.getSingleton()._doneStreaming}constructor(){this.queryKeyFn=r.getCustomRequestQueryKey("experiments:get-variant-info",(e=>e.featureName)),this._doneStreaming=!0,this.pendingServerSideLoadAssignmentRequestKeys=new Set,this.loadedAssignments={},this.pendingLoadAssignmentPromises={},this.pendingAssignmentResolveFns={}}static getSingleton(){return p.singleton||(p.singleton=new p),p.singleton}static markServerSideLoadAssignmentsStarted(e){if(!Array.isArray(e))throw new Error("requestKeys must be an array");const t=this.getSingleton();t._doneStreaming=!1,e.forEach((e=>{t.pendingServerSideLoadAssignmentRequestKeys.add(e)}))}static registerAssignment(e,n){const s=this.getSingleton();if(s._doneStreaming)throw new Error("Cannot register new streamed assignment after marking that we are done streaming.");const i=t.unmarshalProto(n,c);if(s.loadedAssignments[e])throw new Error(`Cannot register streamed assignment for feature ${i.feature}, because it was already registered.`);r.queryClient.setQueryData(s.queryKeyFn({featureName:i.feature}),{apiData:i,pkgData:null}),s.loadedAssignments[e]=i,s.pendingServerSideLoadAssignmentRequestKeys.delete(e),s.pendingAssignmentResolveFns[e]&&(s.pendingAssignmentResolveFns[e].resolve(i),delete s.pendingAssignmentResolveFns[e])}static doneStreaming(){const e=this.getSingleton();if(!e._doneStreaming){for(const[t,{feature:n,resolve:r,reject:s}]of Object.entries(e.pendingAssignmentResolveFns))this._getAssignment(n).then(r,s),delete e.pendingAssignmentResolveFns[t];e.pendingServerSideLoadAssignmentRequestKeys=new Set,e._doneStreaming=!0}}static getAssignment(e){return t.__awaiter(this,void 0,void 0,(function*(){const n=this.getSingleton(),r=(e=>t.marshalProto(new u({features:[new d({feature:e})]})))(e),s=n.loadedAssignments[r];if(s)return s;const i=n.pendingLoadAssignmentPromises[r];if(i)return yield i;let a;a=n.pendingServerSideLoadAssignmentRequestKeys.has(r)?new Promise(((t,s)=>{n.pendingAssignmentResolveFns[r]={feature:e,resolve:t,reject:s}})):this._getAssignment(e),n.pendingLoadAssignmentPromises[r]=a;try{const e=yield a;return n.loadedAssignments[r]=e,e}finally{delete n.pendingLoadAssignmentPromises[r]}}))}static _getAssignment(e){var n,r,s,i;return t.__awaiter(this,void 0,void 0,(function*(){try{for(var a,o=!0,m=t.__asyncValues(this.streamAssignments([e]));a=yield m.next(),!(n=a.done);){i=a.value,o=!1;try{return i}finally{o=!0}}}catch(e){r={error:e}}finally{try{o||n||!(s=m.return)||(yield s.call(m))}finally{if(r)throw r.error}}throw new Error(`Assignment for feature ${e} was expected`)}))}static streamAssignments(e){return t.__asyncGenerator(this,arguments,(function*(){var n,r,s,i;const a=new u({features:e.map((e=>new d({feature:e})))});try{for(var o,m=!0,l=t.__asyncValues(this.client.streamAssignments(a));!(n=(o=yield t.__await(l.next())).done);){i=o.value,m=!1;try{const e=i;yield yield t.__await(e)}finally{m=!0}}}catch(e){r={error:e}}finally{try{m||n||!(s=l.return)||(yield t.__await(s.call(l)))}finally{if(r)throw r.error}}}))}}p.client=n.createEdisonGRPCWebPromiseClient(y),p.singleton=null,e.Stormcrow=p}));
//# sourceMappingURL=e_data_modules_stormcrow.js-vflbuTMl_.map
