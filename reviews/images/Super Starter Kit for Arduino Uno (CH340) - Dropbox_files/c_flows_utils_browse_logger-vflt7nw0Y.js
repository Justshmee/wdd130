define(["exports","react","./c_core_i18n","./e_folder_viewer_src_main","./c_init_data_runtime","./c_files_view_data_store"],(function(e,t,a,o,s,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var i=n(t);const d="flows-automations-snackbar";function l(){return{createInProgress:e=>a.intl.formatMessage({id:"ixnxFP",defaultMessage:"Creating {folderName} automated folder..."},{folderName:e}),addInProgress:e=>a.intl.formatMessage({id:"XWVzJa",defaultMessage:"Adding automation to {folderName}..."},{folderName:e}),feedbackSuccess:a.intl.formatMessage({id:"lXPwmi",defaultMessage:"Thank you for your feedback!"}),createSuccess:e=>a.intl.formatMessage({id:"eqvXsV",defaultMessage:"{folderName} automated folder created."},{folderName:e}),addSuccess:(e,t)=>t?a.intl.formatMessage({id:"4fJng6",defaultMessage:"Automation added to {folderName}. Existing files in this folder will be processed shortly."},{folderName:e}):a.intl.formatMessage({id:"yb+Ei+",defaultMessage:"Automation added to {folderName}."},{folderName:e}),removalSuccess:e=>a.intl.formatMessage({id:"gEPRxb",defaultMessage:"Removed automation from {folderName}."},{folderName:e}),pauseSuccess:e=>a.intl.formatMessage({id:"BJcdth",defaultMessage:"Paused automation for {folderName}."},{folderName:e}),editSuccess:(e,t)=>t?a.intl.formatMessage({id:"cRyXpg",defaultMessage:"Edited automation for {folderName}. Existing files in this folder will be processed shortly."},{folderName:e}):a.intl.formatMessage({id:"PjF0k5",defaultMessage:"Edited automation for {folderName}."},{folderName:e}),reactivateSuccess:e=>a.intl.formatMessage({id:"9CrZQ4",defaultMessage:"Activated automation for {folderName}."},{folderName:e}),defaultError:a.intl.formatMessage({id:"V2wwgQ",defaultMessage:"Something went wrong. Please try again."}),folderRuleGenericCreateError:e=>a.intl.formatMessage({id:"b2vbCw",defaultMessage:"Couldn't create {folderName} automated folder."},{folderName:e}),folderRuleGenericAddError:e=>a.intl.formatMessage({id:"/+u3gq",defaultMessage:"Couldn't add automation to {folderName}."},{folderName:e}),folderRuleNoAccessError:a.intl.formatMessage({id:"7Ke97p",defaultMessage:"You do not have permission to edit this folder."}),conflictPathError:a.intl.formatMessage({id:"X00Q2k",defaultMessage:"A folder with that name already exists."}),closeSnackbarBtn:a.intl.formatMessage({id:"uzUPSw",defaultMessage:"Close"}),tryAgainSnackbarBtn:a.intl.formatMessage({id:"oj8Ras",defaultMessage:"Try again"}),showAutomationDashboardBtn:a.intl.formatMessage({id:"wHJiLw",defaultMessage:"Show all automations"})}}function c(e,t){return function(a,o,...s){const r=a[o],n=t.includes(o);if(null!=r&&n)return;const i=Date.now();a[o]=i,e(o,...s)}}function f(){const{innerWidth:e,innerHeight:t}=window;return{windowWidth:e,windowHeight:t}}function u(e,t){const{extra:a}=t,o=s.__rest(t,["extra"]);r.logWebUserAction(Object.assign(Object.assign({},o),{extra:Object.assign({entry_point:null,source:null},a),event_name:e}))}const m=c(u,[o.WebUserActionLogEvent.AUTOMATED_FOLDER_MODAL_OPEN,o.WebUserActionLogEvent.CONFIRM_CREATE_AUTOMATED_FOLDER,o.WebUserActionLogEvent.CANCEL_ADD_FOLDER_RULES,o.WebUserActionLogEvent.FOLDER_RULES_SETTING_MODAL_TOGGLE_CHANGE,o.WebUserActionLogEvent.CANCEL_FOLDER_RULES_SETTING]);e.AUTOMATIONS_SNACKBAR_ID=d,e.generateModalSessionId=function(){return(new Date).getTime().toString()+Math.random().toString(36).substring(2)},e.logAutoFolderEvent=u,e.logAutoFolderModalEvent=m,e.makeAutoFolderModalLogger=c,e.showErrorSnackbar=function({folderName:e,onClose:t,onRetry:a,type:s}){const{conflictPathError:r,defaultError:n,folderRuleGenericCreateError:c,folderRuleGenericAddError:f,folderRuleNoAccessError:u,closeSnackbarBtn:m,tryAgainSnackbarBtn:g}=l(),b="default"===s?n:{conflict:r,"generic-create":c(e),"generic-add":f(e),"no-access":u}[s];let E={closeButtonText:m,id:d,onCloseClick:t,title:b,timeoutDelayMs:5e3,variant:"fail"};if(a){const e=()=>{o.Snackbar$1.close(d),a()};E=Object.assign(Object.assign({},E),{actionButtonText:g,onActionClick:e})}o.Snackbar$1.show(i.default.createElement(o.Snackbar$1,Object.assign({},E)))},e.showPendingSnackbar=function(e){const{createInProgress:t,addInProgress:a}=l(),s={create:t(e.folderName),add:a(e.folderName)}[e.type];o.Snackbar$1.sync(s,!0,d)},e.showSuccessSnackbar=function(e){const{addSuccess:t,createSuccess:a,feedbackSuccess:s,pauseSuccess:r,removalSuccess:n,editSuccess:c,reactivateSuccess:f,showAutomationDashboardBtn:u,closeSnackbarBtn:m}=l(),g={add:t(e.folderName,e.applyToExistingFiles),create:a(e.folderName),feedback:s,pause:r(e.folderName),remove:n(e.folderName),edit:c(e.folderName,e.applyToExistingFiles),reactivate:f(e.folderName)}[e.type];if(e.shouldShowDashboardCta){const t={closeButtonText:m,actionButtonText:u,id:d,onActionClick:()=>o.redirect(`/automations?_tk=${e.type}_snackbar`),title:g,timeoutDelayMs:5e3,variant:"complete"};o.Snackbar$1.show(i.default.createElement(o.Snackbar$1,Object.assign({},t)))}else o.Snackbar$1.complete(g,d)},e.updateSnackbar=e=>{if("sync"===e.variant)o.Snackbar$1.update(i.default.createElement(o.Snackbar$1,Object.assign({id:d},e)));else{const{closeSnackbarBtn:t}=l();o.Snackbar$1.update(i.default.createElement(o.Snackbar$1,Object.assign({id:d,closeButtonText:t},e)))}},e.useWindowDimensions=()=>{const[e,a]=t.useState(f());return t.useEffect((()=>{const e=()=>{a(f())};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[]),e}}));
//# sourceMappingURL=c_flows_utils_browse_logger.js-vflS-c1dJ.map
