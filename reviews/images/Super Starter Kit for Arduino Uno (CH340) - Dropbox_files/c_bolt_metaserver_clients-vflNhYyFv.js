define(["exports","./c_lodash-es_lodash"],(function(s,t){"use strict";class e{constructor(s,t){this.app_id=s,this.unique_id=t}static from_json(s){return new e(s.app_id,s.unique_id)}}class i{constructor(s,t,e,i){this.app_id=s,this.unique_id=t,this.revision=e,this.token=i}to_json(){var s;return{channel_id:{app_id:this.app_id,unique_id:this.unique_id},revision:null!==(s=this.revision)&&void 0!==s?s:"",token:this.token}}static from_json(s){return new i(s.channel_id.app_id,s.channel_id.unique_id,s.revision,s.token)}}class n{constructor(s,t){this.revision=s,this.payload=t}}class _{constructor(s,t){this.channel_state=s,this.payloads=t}}const o=s=>JSON.stringify(s);class a{_compare_revisions(s,t){const e=Math.max(s.length,t.length),i=Array(e-s.length+1).join("0")+s,n=Array(e-t.length+1).join("0")+t;return i<n?-1:i>n?1:0}constructor(s,i,n,_){this._find_state=s=>this._signed_channel_states[o(s)],this._long_poll=()=>{this._sequence_num++;const s=this._sequence_num,t=new XMLHttpRequest;t.open("POST",this._subscribe_url(),!0),t.setRequestHeader("Content-Type","application/json; charset=utf-8"),Object.keys(this._additional_headers).forEach((s=>{t.setRequestHeader(s,this._additional_headers[s])})),t.timeout=12e4,t.withCredentials=!0,t.responseType="json";const e=()=>this._handle_poll_error(s);t.addEventListener("load",(()=>{const{status:e}=t;e>=200&&e<300||304===e?this._handle_poll_success(s,t):this._handle_poll_error(s)})),t.addEventListener("timeout",e),t.addEventListener("error",e),t.addEventListener("abort",e),t.send(JSON.stringify({channel_states:this._signed_channel_states_keys.map((s=>this._signed_channel_states[s]))})),this._long_poll_xhr=t},this._must_find_state=s=>this._find_state(s),this._handle_poll_data=(s,t)=>{throw new Error("Method must be implemented.")},this._handle_poll_success=(s,i)=>{var n;if(s!==this._sequence_num)return;if(this._long_poll_xhr=void 0,!this._started)return;const _=i.response,o=this._handle_poll_data(_,i);if(o.length>0&&t.defer((()=>this._update_callback(o))),null!=_.invalid_channels&&_.invalid_channels.length>0){const s=_.invalid_channels.map(e.from_json);return void t.defer((()=>this._refresh_callback(s)))}let a=0;const r=Date.now(),h=r-(null!==(n=this._successLastTimestamp)&&void 0!==n?n:0);h<this._successMinimumDelayMs&&(a=this._successMinimumDelayMs-h),this._successLastTimestamp=r,this._backoff_window=1e3,this._timeout_id=window.setTimeout(this._long_poll,a)},this._handle_poll_error=s=>{if(s!==this._sequence_num)return;if(this._long_poll_xhr=void 0,!this._started)return;const t=Math.random()*this._backoff_window;this._backoff_window=Math.min(2*this._backoff_window,3e5),this._timeout_id=window.setTimeout(this._long_poll,t)},this._update_callback=i,this._refresh_callback=n,this._hostname=_,this._signed_channel_states={},this._signed_channel_states_keys=[],this._started=!1,this._sequence_num=0,this._backoff_window=1e3,this._additional_headers={},this._successMinimumDelayMs=0,this._successLastTimestamp=0,this._ignoreExtraChannels=!1,this.update_states(s)}clearAndUpdateStates(s){this._ignoreExtraChannels=!0,this._signed_channel_states={},this._signed_channel_states_keys=[],this.update_states(s)}update_states(s){for(const t of s){const s=t.to_json(),e=this._find_state(s.channel_id);if(null==e){const t=o(s.channel_id);this._signed_channel_states[t]=s,this._signed_channel_states_keys.push(t)}else this._compare_revisions(s.revision,e.revision)>=0&&(e.revision=s.revision,e.token=s.token)}}start(){this._started||(this._started=!0,this._long_poll())}unsubscribe(){this._started=!1,null!=this._long_poll_xhr&&this._long_poll_xhr.abort(),this._long_poll_xhr=void 0,window.clearTimeout(this._timeout_id),this._timeout_id=void 0}_subscribe_url(){return`https://${this._hostname}${this._subscribe_endpoint()}`}_subscribe_endpoint(){throw new Error("Method must be implemented.")}setSuccessMinimumDelay(s){this._successMinimumDelayMs=1e3*s,this._successLastTimestamp=Date.now()}}class r extends a{constructor(s,t,e,n){super(s,t,e,n),this._handle_poll_data=(s,t)=>{const e=[];if(null!=s.channel_states)for(const t of s.channel_states){if(this._ignoreExtraChannels&&!this._find_state(t.channel_id))continue;const s=this._must_find_state(t.channel_id);this._compare_revisions(t.revision,s.revision)>0&&(s.revision=t.revision,s.token=t.token,e.push(i.from_json(t)))}return e}}_subscribe_endpoint(){return"/2/notify/subscribe"}}const h="X-Bolt-Session";s.ChannelId=e,s.MetaserverBoltClient=class extends r{constructor(s,t,e){super(s,t,e,"bolt.dropbox.com")}},s.SignedChannelState=i,s.ThunderClient=class extends a{constructor(s,t,e,o){super(s,t,e,o),this._handle_poll_data=(s,t)=>{const e=[];this._additional_headers={};const o=t.getResponseHeader(h);if(o&&(this._additional_headers[h]=o),null!=s.channel_payloads)for(const t of s.channel_payloads){const s=t.channel_state,o=this._must_find_state(s.channel_id),a=i.from_json(t.channel_state),r=[];for(const s of t.payloads)this._compare_revisions(s.revision,o.revision)>0&&r.push(new n(s.revision,s.payload));r.length>0&&e.push(new _(a,r)),this._compare_revisions(s.revision,o.revision)>0&&(o.revision=s.revision,o.token=s.token)}return e}}unsubscribe(){return delete this._additional_headers[h],super.unsubscribe()}_subscribe_endpoint(){return"/2/payloads/subscribe"}}}));
//# sourceMappingURL=c_bolt_metaserver_clients.js-vflEGqNcd.map
