define(["require","exports","./c_init_data_runtime","./c_apex-metrics_src_types"],(function(e,t,n,r){"use strict";function i(e){return String.fromCharCode(...new Uint8Array(e))}function o(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function c(){return n.__awaiter(this,void 0,void 0,(function*(){const t=r.edge&&!r.edgeChromium();if(void 0!==window.crypto.subtle&&!t&&!r.checkBrowserVersion(r.chrome,40,!1))return window.crypto;if(t){const{legacyEdgeWrapper:t}=yield new Promise((function(t,n){e(["./c_security_legacy_edge_shim"],t,n)})),n=t();if(void 0!==n)return n}throw function(e){const t=new Error(e);return t.isBrowserNotSupported=!0,t}("WebCrypto not supported")}))}t.b64urldecode=function(e){return o(atob(e.replace(/_/g,"/").replace(/-/g,"+")))},t.b64urlencode=function(e){return function(e){return btoa(e).replace(/\//g,"_").replace(/\+/g,"-")}(i(e))},t.bytesToString=i,t.encryptWithPublicKey=function(e,t,r){return n.__awaiter(this,void 0,void 0,(function*(){return c().then((i=>n.__awaiter(this,void 0,void 0,(function*(){const n=i.getRandomValues(new Uint8Array(12)),o=yield i.subtle.generateKey({name:"AES-GCM",length:128},!0,["encrypt","decrypt"]),c=yield i.subtle.encrypt({name:"AES-GCM",iv:n},o,t),u=yield i.subtle.exportKey("raw",o),s=yield i.subtle.importKey("spki",e,{name:"RSA-OAEP",hash:"SHA-256"},!0,["encrypt"]),a=yield i.subtle.encrypt({name:"RSA-OAEP"},s,u),y=new ArrayBuffer(2);return new DataView(y).setInt16(0,r),function(...e){let t=0;for(const n of e)t+=n.byteLength;const n=new Uint8Array(t);let r=0;for(const t of e){const e=new Uint8Array(t);n.set(e,r),r+=t.byteLength}return n}(y,a,n,c)}))))}))},t.hashSHA256=function(e){return n.__awaiter(this,void 0,void 0,(function*(){const t=yield c(),n=yield t.subtle.digest("SHA-256",e);return new Uint8Array(n)}))},t.stringToBytes=o,t.verifyMessageHmac=function(e,t,r){return n.__awaiter(this,void 0,void 0,(function*(){const n=yield c(),i=yield n.subtle.importKey("raw",e,{name:"HMAC",hash:"SHA-256"},!0,["verify"]);return yield n.subtle.verify({name:"HMAC"},i,r,t)}))}}));
//# sourceMappingURL=c_security_crypto.js-vflT8tMdX.map
