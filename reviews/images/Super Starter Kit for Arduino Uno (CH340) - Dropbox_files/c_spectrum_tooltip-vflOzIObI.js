define(["exports","./c_init_data_runtime","./e_folder_viewer_src_main","react","./c_spectrum_positioned_portal","./c_hooks_use_stabilized_callback"],(function(t,o,e,i,n,l){"use strict";function s(t){if(t&&t.__esModule)return t;var o=Object.create(null);return t&&Object.keys(t).forEach((function(e){if("default"!==e){var i=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(o,e,i.get?i:{enumerable:!0,get:function(){return t[e]}})}})),o.default=t,Object.freeze(o)}var r=s(i);const a={above:12,below:12,left:14,right:14};let h=0;class d extends r.Component{constructor(t){super(t),this.positionedPortalEl=null,this.renderContent=this.renderContent.bind(this),this.handlePortalWillClose=this.handlePortalWillClose.bind(this),this.handlePortalWillShow=this.handlePortalWillShow.bind(this),this.handleAnimationEnd=this.handleAnimationEnd.bind(this),this.tooltipWasVisible=!1,this.showTooltip=this.showTooltip.bind(this),this.hideTooltip=this.hideTooltip.bind(this)}handleAnimationEnd(t){"delayed-tooltip"===t.animationName&&(h=Date.now(),this.tooltipWasVisible=!0,this.props.onDidShow&&this.props.onDidShow())}shouldShowDelayed(){return h<Date.now()-3e3}handlePortalWillShow(){document.addEventListener("animationend",this.handleAnimationEnd),this.props.onWillShow&&this.props.onWillShow()}handlePortalWillClose(){document.removeEventListener("animationend",this.handleAnimationEnd),this.tooltipWasVisible&&(h=Date.now()),this.tooltipWasVisible=!1,this.props.onWillClose&&this.props.onWillClose()}showTooltip(){this.positionedPortalEl.showPortal()}hideTooltip(){this.positionedPortalEl.hidePortal()}renderContent(){if(this.props.tooltipContent){const{positioning:t="above",forceSingleLine:o=!1,className:i}=this.props,n=this.shouldShowDelayed(),l=e.cx({"mc-tooltip":!0,"mc-tooltip-bottom":"below"===t,"mc-tooltip-top":"above"===t,"mc-tooltip-left":"left"===t,"mc-tooltip-right":"right"===t,"mc-tooltip-delay":n,"mc-tooltip-no-delay":!n,"mc-tooltip-single-line":o},i);return r.createElement("div",{className:l},r.createElement("div",{className:"mc-tooltip-body"},this.props.tooltipContent))}return null}render(){const t=this.props,{renderContent:e=this.renderContent,showOnMouseMove:i=!0,closeOnBlur:s=!0,showOnClick:h=!1,positioning:d="above",id:p=l.generateUUID("tooltip"),className:c}=t,m=o.__rest(t,["renderContent","showOnMouseMove","closeOnBlur","showOnClick","positioning","id","className"]);return r.createElement(n.PositionedPortal,Object.assign({renderContent:e,showOnMouseMove:i,closeOnBlur:s,showOnClick:h,positioning:d,positionOffset:a[d],id:p},m,{onWillShow:this.handlePortalWillShow,onWillClose:this.handlePortalWillClose,role:"tooltip",ref:t=>this.positionedPortalEl=t}),this.props.children)}}d.displayName="Tooltip",t.Tooltip=d}));
//# sourceMappingURL=c_spectrum_tooltip.js-vflvp2GYC.map
